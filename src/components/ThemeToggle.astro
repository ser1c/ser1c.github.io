---
// ThemeToggle.astro - Just the dark mode toggle
---

<button
  id="theme-toggle"
  class="theme-toggle px-2 py-1 rounded-md flex items-center gap-1 bg-mountain-100 hover:bg-mountain-200 text-mountain-700 border border-mountain-300 transition-colors"
  aria-label="Toggle dark mode"
>
  <span class="dark:hidden">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-moon">
      <path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path>
    </svg>
  </span>
  <span class="hidden dark:inline">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide-sun">
      <circle cx="12" cy="12" r="4"></circle>
      <path d="M12 2v2"></path>
      <path d="M12 20v2"></path>
      <path d="M5 5l1.5 1.5"></path>
      <path d="M17.5 17.5L19 19"></path>
      <path d="M5 19l1.5-1.5"></path>
      <path d="M17.5 6.5L19 5"></path>
      <path d="M2 12h2"></path>
      <path d="M20 12h2"></path>
    </svg>
  </span>
  <span class="text-xs dark:hidden">Dark Mode</span>
  <span class="text-xs hidden dark:inline">Light Mode</span>
</button>

<script>
  // Initialize theme based on local storage or system preference
  function initializeTheme() {
    const isDarkMode = localStorage.getItem('theme') === 'dark' || 
      (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches);
    
    document.documentElement.classList.toggle('dark', isDarkMode);
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', () => {
    initializeTheme();
  });

  // Set up dark mode toggle
  document.getElementById('theme-toggle')?.addEventListener('click', () => {
    const isDark = document.documentElement.classList.toggle('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  });
</script>